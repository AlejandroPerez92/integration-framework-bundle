parameters:
  # PROCESSORS CLASS NAMES
  smartesb.processor.router.class: Smartbox\Integration\FrameworkBundle\Core\Processors\Routing\ContentRouter
  smartesb.processor.multicast.class: Smartbox\Integration\FrameworkBundle\Core\Processors\Routing\Multicast
  smartesb.processor.pipeline.class: Smartbox\Integration\FrameworkBundle\Core\Processors\Routing\Pipeline
  smartesb.processor.transformer.class: Smartbox\Integration\FrameworkBundle\Core\Processors\Transformation\Transformer
  smartesb.processor.throw_exception.class: Smartbox\Integration\FrameworkBundle\Core\Processors\ControlFlow\ThrowException
  smartesb.processor.stop.class: Smartbox\Integration\FrameworkBundle\Core\Processors\Miscellaneous\Stop

  smartesb.handlers.message_routing.class: Smartbox\Integration\FrameworkBundle\Core\Handlers\MessageHandler
  smartesb.util.evaluator.class: Smartbox\Integration\FrameworkBundle\Tools\Evaluator\ExpressionEvaluator
  smartesb.util.mapper.class: Smartbox\Integration\FrameworkBundle\Tools\Mapper\Mapper
  smartesb.serialization.handler.itinerary.class: Smartbox\Integration\FrameworkBundle\Core\Itinerary\ItinerarySerializationHandler
  smartesb.serialization.handler.mongodate.class: Smartbox\Integration\FrameworkBundle\Components\DB\NoSQL\Drivers\MongoDBDateHandler
  smartesb.helper.class: Smartbox\Integration\FrameworkBundle\Tools\Helper\SmartesbHelper
  smartesb.itinerary.class: Smartbox\Integration\FrameworkBundle\Core\Itinerary\Itinerary
  smartesb.event_listener.events_logger.class: Smartbox\Integration\FrameworkBundle\Tools\Logs\EventsLoggerListener

services:
  # SERIALIZATION
  smartesb.serialization.handler.itinerary:
      class:  %smartesb.serialization.handler.itinerary.class%
      calls:
        - [setContainer, [@service_container]]
      tags:
        - { name: jms_serializer.subscribing_handler }

  smartesb.serialization.handler.mongodate:
      class: %smartesb.serialization.handler.mongodate.class%
      tags:
        - { name: jms_serializer.subscribing_handler }

  # UTILS
  smartesb.util.evaluator:
      class: %smartesb.util.evaluator.class%
      calls:
        - [setSerializer, [@serializer]]
        - [setMapper, [@smartesb.util.mapper]]

  smartesb.util.mapper:
      class: %smartesb.util.mapper.class%
      calls:
        - [setEvaluator, [@smartesb.util.evaluator]]

  # INTERNAL HELPERS
  smartesb.message_factory:
      class: Smartbox\Integration\FrameworkBundle\Core\Messages\MessageFactory
      calls:
          - [ setFlowsVersion, [ %smartesb.flows_version% ] ]

  smartesb.endpoint_factory:
    class: Smartbox\Integration\FrameworkBundle\Core\Endpoints\EndpointFactory
    calls:
        - [ setEndpointsRouter, [ @smartesb.router.endpoints ] ]
        - [ setMessageFactory, [ @smartesb.message_factory ] ]

  smartesb.helper:
      class: %smartesb.helper.class%
      calls:
          - [ setContainer, [ @service_container ] ]

  # EVENTS LOGGING
  smartesb.event_listener.events_logger:
      class: %smartesb.event_listener.events_logger.class%
      arguments: [@monolog.logger.tracking, @request_stack, %smartesb.event_listener.events_logger.log_level%]
      tags:
        - { name: kernel.event_listener, event: smartesb.handler.before_handle, method: onEvent }
        - { name: kernel.event_listener, event: smartesb.process.before_process, method: onEvent }
        - { name: kernel.event_listener, event: smartesb.event.error, method: onEvent }
        - { name: kernel.event_listener, event: smartesb.process.after_process, method: onEvent }
        - { name: kernel.event_listener, event: smartesb.handler.after_handle, method: onEvent }

  # PLACEHOLDERS FOR CONFIGURED HANLDERS
  smartesb.handlers.sync:
      class: %smartesb.handlers.message_routing.class%

  smartesb.handlers.async:
      class: %smartesb.handlers.message_routing.class%