parameters:
  smartesb.registry.endpoints.class: Smartbox\Integration\FrameworkBundle\Helper\EndpointsRegistry
  smartesb.itinerary.class: Smartbox\Integration\FrameworkBundle\Processors\Itinerary

  smartesb.handler.main.class: Smartbox\Integration\FrameworkBundle\Handlers\MessageHandler
  smartesb.handler.events.class: Smartbox\Integration\FrameworkBundle\Handlers\DeferredEventsHandler
  smartesb.event_listener.events_logger.class: Smartbox\Integration\FrameworkBundle\EventListener\EventsLoggerListener

  smartesb.processor.router.class: Smartbox\Integration\FrameworkBundle\Processors\Routing\ContentRouter
  smartesb.processor.multicast.class: Smartbox\Integration\FrameworkBundle\Processors\Routing\Multicast
  smartesb.processor.pipeline.class: Smartbox\Integration\FrameworkBundle\Processors\Routing\Pipeline
  smartesb.processor.transformer.class: Smartbox\Integration\FrameworkBundle\Processors\Transformation\Transformer
  smartesb.processor.throw_exception.class: Smartbox\Integration\FrameworkBundle\Processors\ControlFlow\ThrowException
  smartesb.processor.stop.class: Smartbox\Integration\FrameworkBundle\Processors\Miscellaneous\Stop

  event_dispatcher.class: Smartbox\Integration\FrameworkBundle\Events\EventDispatcher

  smartesb.util.evaluator.class: Smartbox\Integration\FrameworkBundle\Util\ExpressionEvaluator
  smartesb.util.mapper.class: Smartbox\Integration\FrameworkBundle\Util\Mapper
  smartesb.serialization.handler.itinerary.class: Smartbox\Integration\FrameworkBundle\Serialization\ItineraryHandler
  smartesb.internal_router.class: Smartbox\Integration\FrameworkBundle\Routing\InternalRouter
  smartesb.map.itineraries.class: Smartbox\Integration\FrameworkBundle\Routing\ItinerariesMap
  smartesb.event_listener.fatal_error.class: Smartbox\Integration\FrameworkBundle\EventListener\FatalErrorListener
  smartbox.monolog.formatter.json.class: Smartbox\Integration\FrameworkBundle\Util\JMSSerializerFormatter

  smartesb.serialization.handler.mongodate.class: Smartbox\Integration\FrameworkBundle\Storage\Driver\MongoDBDateHandler

  smartesb.smoke_test.validate_connectors.class: Smartbox\Integration\FrameworkBundle\Util\SmokeTest\ValidateConnectorsSmokeTest
  smartesb.smoke_test.check_queue_driver_connection.class: Smartbox\Integration\FrameworkBundle\Util\SmokeTest\QueueDriverConnectionSmokeTest
  smartbox.smoke_test.file_permissions.class: Smartbox\Integration\FrameworkBundle\Util\SmokeTest\FilePermissionsSmokeTest

  smartesb.router.itineraries.options:
      cache_dir: %kernel.cache_dir%
      debug: %kernel.debug%
      generator_class: 'SmartesbItinerariesUrlGenerator'
      generator_base_class: %router.options.generator_base_class%
      generator_dumper_class: %router.options.generator_dumper_class%
      generator_cache_class: %router.options.generator.cache_class%
      matcher_class: %router.options.matcher_class%
      matcher_base_class: %router.options.matcher_base_class%
      matcher_dumper_class: %router.options.matcher_dumper_class%
      matcher_cache_class: 'SmartesbItinerariesUrlMatcher'

  smartesb.router.connectors.options:
      cache_dir: %kernel.cache_dir%
      debug: %kernel.debug%
      generator_class: 'SmartesbConnectorsUrlGenerator'
      generator_base_class: %router.options.generator_base_class%
      generator_dumper_class: %router.options.generator_dumper_class%
      generator_cache_class: %router.options.generator.cache_class%
      matcher_class: %router.options.matcher_class%
      matcher_base_class: %router.options.matcher_base_class%
      matcher_dumper_class: %router.options.matcher_dumper_class%
      matcher_cache_class: 'SmartesbConnectorsUrlMatcher'

services:
  smartesb.util.evaluator:
      class: %smartesb.util.evaluator.class%
      calls:
        - [setSerializer, [@serializer]]
        - [setMapper, [@smartesb.util.mapper]]

  smartesb.util.mapper:
      class: %smartesb.util.mapper.class%
      calls:
        - [setEvaluator, [@smartesb.util.evaluator]]

  smartesb.serialization.handler.itinerary:
      class:  %smartesb.serialization.handler.itinerary.class%
      calls:
        - [setContainer, [@service_container]]
      tags:
        - { name: jms_serializer.subscribing_handler }

  smartesb.serialization.handler.mongodate:
      class: %smartesb.serialization.handler.mongodate.class%
      tags:
        - { name: jms_serializer.subscribing_handler }

  smartesb.router.itineraries:
      class: %smartesb.internal_router.class%
      arguments:
        - @service_container
        - "%kernel.root_dir%/config/routing_itineraries.yml"
        - %smartesb.router.itineraries.options%
      tags:
        - { name: monolog.logger, channel: "router.itineraries" }

  smartesb.router.connectors:
      class: %smartesb.internal_router.class%
      arguments:
        - @service_container
        - "%kernel.root_dir%/config/routing_connectors_%kernel.environment%.yml"
        - %smartesb.router.connectors.options%
      tags:
        - { name: monolog.logger, channel: "router.connectors" }

  smartesb.router.itineraries.cache_warmer:
    class: %router.cache_warmer.class%
    arguments:
      - @smartesb.router.itineraries
    tags:
      - { name: "kernel.cache_warmer" }

  smartesb.router.connectors.cache_warmer:
    class: %router.cache_warmer.class%
    arguments:
      - @smartesb.router.connectors
    tags:
      - { name: "kernel.cache_warmer" }

  smartesb.map.itineraries:
    class: %smartesb.map.itineraries.class%

  smartesb.routing.itineraries_routes_loader:
      class: Smartbox\Integration\FrameworkBundle\Routing\ItinerariesRoutesLoader
      calls:
          - [ setContainer, [ @service_container ] ]
      tags:
          - { name: routing.loader }

  smartesb.registry.event_filters:
    class: Smartbox\Integration\FrameworkBundle\Events\EventFiltersRegistry

  smartbox.monolog.formatter.json:
      class: %smartbox.monolog.formatter.json.class%
      calls:
          - [setSerializer, [@serializer]]

  smartesb.registry.endpoints:
      class: %smartesb.registry.endpoints.class%

  smartesb.event_listener.fatal_error:
      class: %smartesb.event_listener.fatal_error.class%
      tags:
        - { name: kernel.event_listener, event: smartesb.event.error, method: onErrorEvent }

  smartbox.consumers.queue.events:
      class: Smartbox\Integration\FrameworkBundle\Consumers\QueueConsumer
      calls:
          - [ setQueueDriver, [ @smartesb.events_queue_driver ] ]
          - [ setHandler, [ @smartbox.handler.events ] ]

  # Queue Events Handler
  smartbox.handler.events:
      class: %smartesb.handler.events.class%
      calls:
        - [setEventDispatcher, [@event_dispatcher]]
        - [setFlowsVersion, [%smartesb.flows_version%]]

  smartesb.event_listener.events_logger:
      class: %smartesb.event_listener.events_logger.class%
      arguments: [@monolog.logger.tracking, @request_stack, %smartesb.event_listener.events_logger.log_level%]
      tags:
        - { name: kernel.event_listener, event: smartesb.handler.before_handle, method: onEvent }
        - { name: kernel.event_listener, event: smartesb.process.before_process, method: onEvent }
        - { name: kernel.event_listener, event: smartesb.event.error, method: onEvent }
        - { name: kernel.event_listener, event: smartesb.process.after_process, method: onEvent }
        - { name: kernel.event_listener, event: smartesb.handler.after_handle, method: onEvent }

  smartesb.message_factory:
      class: Smartbox\Integration\FrameworkBundle\Messages\MessageFactory
      calls:
          - [ setFlowsVersion, [ %smartesb.flows_version% ] ]

  ## SMOKE TESTS ##
  smartesb.smoke_test.validate_connectors:
      class: %smartesb.smoke_test.validate_connectors.class%
      arguments: [@service_container]
      tags:
          - { name: smartbox.smoke_test }

  smartesb.smoke_test.check_queue_driver_connection:
      class: %smartesb.smoke_test.check_queue_driver_connection.class%
      arguments: [@smartesb.default_queue_driver, @smartesb.events_queue_driver]
      tags:
          - { name: smartbox.smoke_test }

  smartesb.smoke_test.file_permissions:
      class: %smartbox.smoke_test.file_permissions.class%
      arguments: [ '%kernel.root_dir%/cache' ]
      tags:
          - { name: smartbox.smoke_test }

